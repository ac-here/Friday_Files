% Author: Anand Chandrasekhar
% This function fit an exponential to the tail end of the waveform.
% We are fitting an exponential waveform P(x) = P_inf + P0 * exp( - (x/Tau) )
% Input     time_beat   (time vector for a single beat)
%           BP_beat     (BP waveform for a single beat) 
%           Please ensure Foot is detected via Tangent method
%           P_inf_range (Lowerlimit , upperlimit) example [0 BP_beat(end) -1]
%           Delta_P_inf Change in range for each iteration ( example 10)
%           plot_data   (== 1 means plot the results) 
%           range_Tau   [Lowerlimit, upperlimit] example [0.5 0.6]
%           resolution_pressure: Example 1
%                       (While fitting the waveform, pressure will be 
%                       incremented in steps of "resolution_pressure")
%           Samples_per_beat_previous calculated from the previous beat
%          	Error_Message : May ignore this input 
%           modify_Index  : If true, Index will be modified to fit the
%                           curve to the entire tail end of the beat
%           Method        : 1 ==>   Linear Optimization
%                                   Fitting curve P(x) = P_inf + P0 * exp( - (x/Tau) )
%                         : 2 ==>   Fitting curve abs| P'(x) | = P0/Tau * exp( - (x/Tau) )  
%                         : 3 ==>   Nonlinear optimization  
%                                   Fitting curve P(x) = P_inf + (P0 - Pinf) * exp( - (x - X0)/Tau )
%           percent_tail_range:     Percent tail should be range to be
%                                   selected for fitting the exponential decay. Example [50:-1:20]
%           Minimum_points_required_to_fit_EXP: if the exponential data has less than the 
%                                   value in the variable, you get an error.
function [Error_Message,...
            Tau_sel, ...
            P_inf_sel, ...
            Index_select, ...
            BP_sel] = find_exponential_fit_main(...
                            time_beat, BP_beat, ...
                            plot_data, ...
                            range_Tau, ...             
                            Error_Message, ...
                            modify_Index, ...
                            Method, ...
                            percent_tail_range, ...
                            Minimum_points_required_to_fit_EXP)

    
    Tau_sel             = nan;
    P_inf_sel           = nan;
    Index_select        = nan; 
    BP_sel              = nan;  
    
    if ~isempty(Error_Message)        
        return;
    end
    
    if ~exist('modify_Index', 'var')
        modify_Index = false;
    end
    
    if ~exist('Method', 'var')
        Method = 10;
    end
        
    if plot_data
        yyaxis('left');
        plot(time_beat, BP_beat, '-k'); hold on;
    end
    
    % Set this variable to a value to decide the minimum of data required
    % to fit an exponential
    if ~exist('Minimum_points_required_to_fit_EXP', 'var')
        Minimum_points_required_to_fit_EXP = 10;
    end
    
    % Find the tail end of the waveform
    %These are other optional functions: find_region_for_exponential_fit
    
%     [New_T_exp, New_P_exp, ...
%             Error_Flag, Error_Message, ...
%             ~, ~, Index_select] = ...
%                 find_region_for_exponential_fit(time_beat, BP_beat);
            
    [New_T_exp, New_P_exp, ...
            Error_Flag, Error_Message, ...
            ~, ~, Index_select] = ...
                find_region_for_exponential_fit_iterative_version(...
                    time_beat, BP_beat, percent_tail_range'/100, ...
                    Minimum_points_required_to_fit_EXP);            
                
    if Error_Flag        
        return;
    end
    
    % Anand : Added 3/22/2022
    % Modified the "Index_select" to fit the entiire tail
    if modify_Index
        Index_select    = (Index_select(1):length(time_beat));
        New_T_exp       = time_beat(Index_select);
        New_P_exp       = BP_beat(Index_select);
    end
    
    % Trim the beat to the minima value
    [~, min_idx]        = min(New_P_exp);
    New_P_exp           = New_P_exp(1:min_idx);
    New_T_exp           = New_T_exp(1:min_idx);
    
    % Interpolate the fitting region
%     New_P_exp1  = interpolate_me(New_P_exp, ...
%                     floor( (max(New_P_exp) - min(New_P_exp))/3 ) );
%     New_T_exp1  = interp1(New_P_exp, New_T_exp, New_P_exp1);
%     New_P_exp   = New_P_exp1;
%     New_T_exp   = New_T_exp1;
    
    % Fit an exponential. There are 10 ways to fit an exponential
        
    switch Method
        case 1                                  
            [Tau_sel, ...
            P_inf_sel, ...
            Error_Message, ...
            ~, ...
            ~, ...
            ~, ...
            ~, ...
            X_decay_Ex, ...
            Est_Y_Ex, ...
            BP_sel] ...
                    = find_exponetial_decay_from_waveform_without_Range_modification(...
                            New_T_exp, ...
                            New_P_exp, ...
                            [], ... 
                            range_Tau,...
                            1);
        case 2
            [P_inf_sel, ...
                Tau_sel, ...
                X_decay_Ex, ...
                Est_Y_Ex, ...
                Error_Message, ...
                BP_sel]...
                        = gradient_method(New_T_exp, New_P_exp, range_Tau, false);             
        case 3
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                ~, ...
                X_decay_Ex, Est_Y_Ex, ...
                BP_sel] ...
                        = find_exponential_decay_parameter_with_fmincon(...
                            New_T_exp, ...
                            New_P_exp, ...
                            range_Tau); 
        case 4
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                ~, ...
                X_decay_Ex, Est_Y_Ex, ...
                BP_sel] ...
                        = find_exponential_decay_parameter_with_fmincon_multiple_Tau(...
                            New_T_exp, ...
                            New_P_exp);             
        case 5 
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                ~, ...
                X_decay_Ex, Est_Y_Ex, ...
                ~, BP_sel] ...
                        = find_exponential_decay_parameter_multiple_segments(...
                            New_T_exp, ...
                            New_P_exp, 20);
        case 6
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                X_decay_Ex, Est_Y_Ex, ...
                BP_sel] ...
                    = find_exponential_decay_parameter_X_segments(...
                            New_T_exp, New_P_exp, [9, 10]); 
        case 7
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                X_decay_Ex, Est_Y_Ex, ...
                BP_sel] ...
                    = find_exponential_decay_range_free_parameter(...
                            New_T_exp, New_P_exp, ..., 
                            range_Tau, ...
                            3);
        case 8
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                ~, ...
                X_decay_Ex, Est_Y_Ex, ...
                BP_sel] ...
                        = find_exponential_decay_parameter_with_Pinf(...
                            New_T_exp, ...
                            New_P_exp);
        case 9
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                ~, ...
                X_decay_Ex, Est_Y_Ex, ...
                BP_sel] ...
                        = find_exponential_decay_parameter_with_Pinf_T0(...
                            New_T_exp, ...
                            New_P_exp);
        case 10
            [P_inf_sel, ...
                Tau_sel, ...
                Error_Message, ...
                ~, ...
                X_decay_Ex, Est_Y_Ex, ...
                BP_sel] ...
                        = find_exponential_decay_parameter_without_Pinf(...
                            New_T_exp, ...
                            New_P_exp, ...
                            range_Tau);
                        
    end
    
    if plot_data && strcmp(Error_Message, '')
        plot(New_T_exp, New_P_exp, 'ok', 'LineWidth', 3);
        plot(X_decay_Ex, Est_Y_Ex, '-r', 'LineWidth', 3);               
        title(sprintf('Method = %d, Tau = %1.2f, Pinf = %3.1f', ...
                Method, mean(Tau_sel, 'omitnan'), P_inf_sel));
    end                       
end